{"ast":null,"code":"var _jsxFileName = \"/home/joar/Dev/LearningProjects/FullStackOpen/excersices/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayHeader = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 35\n}, this);\n\n_c = DisplayHeader;\n\nconst DisplayStats = props => {\n  const total = props.good + props.neutral + props.bad;\n\n  if (total == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  const positive = props.good / total * 100;\n  const average = (props.good - props.bad) / total;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", props.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = DisplayStats;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const HandleGood = () => setGood(good + 1);\n\n  const HandleNeutral = () => setNeutral(neutral + 1);\n\n  const HandleBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DisplayHeader, {\n      text: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: HandleGood,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: HandleNeutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: HandleBad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayHeader, {\n      text: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayStats, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DisplayHeader\");\n$RefreshReg$(_c2, \"DisplayStats\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/joar/Dev/LearningProjects/FullStackOpen/excersices/part1/src/App.js"],"names":["React","useState","DisplayHeader","text","DisplayStats","props","total","good","neutral","bad","positive","average","Button","onClick","App","setGood","setNeutral","setBad","HandleGood","HandleNeutral","HandleBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBAAY;AAAA,YAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,QAAlC;;KAAMD,a;;AAEN,MAAME,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACG,OAAnB,GAA6BH,KAAK,CAACI,GAAjD;;AACA,MAAIH,KAAK,IAAI,CAAb,EAAgB;AACd,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,QAAMI,QAAQ,GAAGL,KAAK,CAACE,IAAN,GAAWD,KAAX,GAAmB,GAApC;AACA,QAAMK,OAAO,GAAG,CAACN,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACI,GAApB,IAAyBH,KAAzC;AACA,sBACE;AAAA,4BACE;AAAA,0BAASD,KAAK,CAACE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAYF,KAAK,CAACG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yBAAQH,KAAK,CAACI,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,yBAAQH,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,6BAAYK,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,8BAAaD,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBD;;MAAMN,Y;;AAoBN,MAAMQ,MAAM,GAAIP,KAAD,IAAW;AACxB,sBACA;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACQ,OAAvB;AAAA,cACCR,KAAK,CAACF;AADP;AAAA;AAAA;AAAA;AAAA,UADA;AAKD,CAND;;MAAMS,M;;AAYN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUQ,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMQ,MAAN,IAAgBhB,QAAQ,CAAC,CAAD,CAA9B;;AAIA,QAAMiB,UAAU,GAAG,MAAMH,OAAO,CAACR,IAAI,GAAE,CAAP,CAAhC;;AACA,QAAMY,aAAa,GAAG,MAAMH,UAAU,CAACR,OAAO,GAAE,CAAV,CAAtC;;AACA,QAAMY,SAAS,GAAG,MAAMH,MAAM,CAACR,GAAG,GAAE,CAAN,CAA9B;;AAGA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAES,UAAjB;AAA6B,MAAA,IAAI,EAAG;AAApC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAgC,MAAA,IAAI,EAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAA4B,MAAA,IAAI,EAAG;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,YAAD;AACE,MAAA,IAAI,EAAIb,IADV;AAEE,MAAA,OAAO,EAAIC,OAFb;AAGE,MAAA,GAAG,EAAIC;AAHT;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3BD;;GAAMK,G;;MAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\n\n\nconst DisplayHeader = ({text}) => <h1>{text}</h1>\n\nconst DisplayStats = (props) => {\n  const total = props.good + props.neutral + props.bad\n  if (total == 0) {\n    return(\n      <div>No feedback given</div>\n    )\n  }\n  const positive = props.good/total * 100\n  const average = (props.good - props.bad)/total\n  return(\n    <div>\n      <p>good {props.good}</p>\n      <p>neutral {props.neutral}</p>\n      <p>bad {props.bad}</p>\n      <p>all {total}</p>\n      <p>average {average}</p>\n      <p>positive {positive}%</p>\n    </div>\n)\n}\nconst Button = (props) => {\n  return(\n  <button onClick={props.onClick}>\n  {props.text}\n  </button>\n  )\n}\n\n\n\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n\n\n  const HandleGood = () => setGood(good +1)\n  const HandleNeutral = () => setNeutral(neutral +1)\n  const HandleBad = () => setBad(bad +1)\n  \n \n  return (\n    <div>\n      <DisplayHeader text = \"Give Feedback\"/>\n      <Button onClick={HandleGood} text = \"Good\"/>\n      <Button onClick={HandleNeutral} text = \"Neutral\"/>\n      <Button onClick={HandleBad} text = \"Bad\"/>\n      <DisplayHeader text = \"Statistics\"/>\n      <DisplayStats\n        good = {good}\n        neutral = {neutral}\n        bad = {bad}/>\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}