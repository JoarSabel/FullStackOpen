{"ast":null,"code":"var _jsxFileName = \"/home/joar/Dev/LearningProjects/FullStackOpen/excersices/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayHeader = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 35\n}, this);\n\n_c = DisplayHeader;\n\nconst DisplayStats = props => console.log(props.number);\n\n_c2 = DisplayStats;\n\n/*#__PURE__*/\n_jsxDEV(\"div\", {\n  children: [props.text, \" \", props.number]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 59\n}, this);\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c3 = Button;\ngoodgood;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const HandleGood = () => setGood(good + 1);\n\n  const HandleNeutral = () => setNeutral(neutral + 1);\n\n  const HandleBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DisplayHeader, {\n      text: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => HandleGood,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => HandleNeutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => HandleBad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayHeader, {\n      text: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayStats, {\n      text: \"Good\",\n      number: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayStats, {\n      text: \"Neutral\",\n      number: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayStats, {\n      text: \"Bad\",\n      number: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DisplayHeader\");\n$RefreshReg$(_c2, \"DisplayStats\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/joar/Dev/LearningProjects/FullStackOpen/excersices/part1/src/App.js"],"names":["React","useState","DisplayHeader","text","DisplayStats","props","console","log","number","Button","handleClick","goodgood","App","good","setGood","neutral","setNeutral","bad","setBad","HandleGood","HandleNeutral","HandleBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBAAY;AAAA,YAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,QAAlC;;KAAMD,a;;AAEN,MAAME,YAAY,GAAIC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB,CAAhC;;MAAMJ,Y;;AAAoD;AAAA;AAAA,aAAMC,KAAK,CAACF,IAAZ,OAAmBE,KAAK,CAACG,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE1D,MAAMC,MAAM,GAAIJ,KAAD,iBACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACK,WAAvB;AAAA,YACCL,KAAK,CAACF;AADP;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMM,M;AAQNE,QAAQ;;AACR,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMkB,UAAU,GAAG,MAAML,OAAO,CAACD,IAAI,GAAE,CAAP,CAAhC;;AACA,QAAMO,aAAa,GAAG,MAAMJ,UAAU,CAACD,OAAO,GAAE,CAAV,CAAtC;;AACA,QAAMM,SAAS,GAAG,MAAMH,MAAM,CAACD,GAAG,GAAE,CAAN,CAA9B;;AAGA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAME,UAA3B;AAAuC,MAAA,IAAI,EAAG;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMC,aAA3B;AAA0C,MAAA,IAAI,EAAG;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMC,SAA3B;AAAsC,MAAA,IAAI,EAAG;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,YAAD;AAAc,MAAA,IAAI,EAAG,MAArB;AAA4B,MAAA,MAAM,EAAIR;AAAtC;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAG,SAArB;AAA+B,MAAA,MAAM,EAAIE;AAAzC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAG,KAArB;AAA2B,MAAA,MAAM,EAAIE;AAArC;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5BD;;GAAML,G;;MAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\n\n\nconst DisplayHeader = ({text}) => <h1>{text}</h1>\n\nconst DisplayStats = (props) => console.log(props.number);<div>{props.text} {props.number}</div>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n  {props.text}\n  </button>\n)\n\n\n\ngoodgood\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const HandleGood = () => setGood(good +1)\n  const HandleNeutral = () => setNeutral(neutral +1)\n  const HandleBad = () => setBad(bad +1)\n  \n \n  return (\n    <div>\n      <DisplayHeader text = \"Give Feedback\"/>\n      <Button handleClick={() => HandleGood} text = \"Good\"/>\n      <Button handleClick={() => HandleNeutral} text = \"Neutral\"/>\n      <Button handleClick={() => HandleBad} text = \"Bad\"/>\n      <DisplayHeader text = \"Statistics\"/>\n      <DisplayStats text = \"Good\" number = {good}/>\n      <DisplayStats text = \"Neutral\" number = {neutral}/>\n      <DisplayStats text = \"Bad\" number = {bad}/>\n\n      \n\n\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}